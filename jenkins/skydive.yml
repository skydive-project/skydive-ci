- parameter:
    name: skydive-default-parameters
    parameters:
      - skydive-parameters:
          name: skydive
          repository: https://github.com/skydive-project/skydive
          ref: "${sha1}"
          refspec: "+refs/pull/*:refs/remotes/origin/pr/*"
          dry-run: "true"
          keep-resources: ""

- builder:
    name: skydive-cleanup
    builders:
      - shell: |
          #!/bin/bash
          cd src/github.com/skydive-project/skydive-ci
          [ -d /var/tmp/skydive-cleanup ] || sudo scripts/cleanup.sh init
          sudo scripts/cleanup.sh snapshot
          sudo scripts/cleanup.sh cleanup

- defaults:
    name: skydive
    project-type: freestyle
    concurrent: true
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: slaves
    properties:
      - github:
          url: https://github.com/skydive-project/skydive
      - inject:
          properties-content: MINIKUBE_DRIVER=kvm2
      - build-discarder:
          artifact-num-to-keep: 100
      - rebuild
    scm:
      - skydive-github:
          name: skydive
          repository: "${REPOSITORY}"
          ref: "${REF}"
          refspec: "${REFSPEC}"
          shallow-clone: true
      - skydive-ci-github
    wrappers:
      - skydive-wrappers
    publishers:
      - skydive-publishers

- job:
    name: skydive-go-fmt
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: go-fmt
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-go-fmt.sh

- job:
    name: skydive-unit-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: unit-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-unit-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-compile-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: compile-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-compile-tests.sh

- job:
    name: skydive-k8s-tests
    defaults: skydive
    wrappers:
      - skydive-wrappers
      - timeout:
          timeout: 40
          fail: true
          type: absolute
    triggers:
      - skydive-pull-request:
          name: k8s-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    builders:
      - skydive-cleanup
      - ci-script:
          script: |
            sudo systemctl restart libvirtd || true
            WITH_ISTIO=true . scripts/install-minikube.sh start
      - skydive-test:
          test: BACKEND=elasticsearch scripts/ci/run-istio-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers
      - skydive-post-script:
          only-if-successful: true
          script: |
            [ "$KEEP_RESOURCES" = "true" ] || . src/github.com/skydive-project/skydive-ci/scripts/install-minikube.sh stop
      - skydive-post-script:
          only-if-successful: false
          script: |
            [ "$KEEP_RESOURCES" = "true" ] || . src/github.com/skydive-project/skydive-ci/scripts/install-minikube.sh delete

- job:
    name: skydive-opencontrail-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: opencontrail-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-test:
          test: scripts/ci/run-opencontrail-tests.sh

- job:
    name: skydive-functional-tests-backend-elasticsearch
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: functional-tests-backend-elasticsearch
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=elasticsearch WITH_EBPF=true ARGS="-ovs.oflow.native" scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-functional-tests-backend-orientdb
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: functional-tests-backend-orientdb
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=orientdb WITH_EBPF=true scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-scale-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: scale-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: FLOW_PROTOCOL=udp scripts/ci/run-scale.sh
      - skydive-cleanup
      - skydive-test:
          test: FLOW_PROTOCOL=websocket scripts/ci/run-scale.sh
    publishers:
      - skydive-post-script:
          only-if-successful: false
          script: |
            SKYDIVE=skydive "src/github.com/skydive-project/skydive/scripts/scale.sh" stop 2 4 2

- job:
    name: skydive-cdd-overview-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: cdd-overview-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-cdd-overview-tests.sh
    publishers:
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/postmortem.png'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.mp4'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/overview.gif'
          allow-empty: 'true'
      - archive:
          artifacts: 'src/github.com/skydive-project/skydive/tests/graph.json'
          allow-empty: 'true'
      - skydive-publishers

- job:
    name: skydive-release
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: release
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    wrappers:
      - github-credentials
      - skydive-wrappers
    builders:
      - skydive-test:
          test: scripts/ci/create-release.sh

- job:
    name: skydive-create-vagrant-boxes
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: vagrant
      - string:
          name: PROVIDERS
          default: ""
          description: Providers to build the image for
    triggers:
      - skydive-pull-request:
          name: create-vagrant-boxes
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    wrappers:
      - credentials-binding:
          - text:
              credential-id: vagrantcloud-token
              variable: VAGRANTCLOUD_TOKEN
      - skydive-wrappers
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/create-vagrant-boxes.sh

- job:
    name: skydive-create-docker-image
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: create-docker-image
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-create-docker-image:
          binary: skydive
          build-command: |
            make build WITH_OPENCONTRAIL=false WITH_EBPF=true WITH_EBPF_DOCKER_BUILDER=false
          dockerfile: contrib/docker/Dockerfile
          image: skydive/skydive
          image-snapshot: skydive/snapshot
          module: github.com/skydive-project/skydive
    wrappers:
      - docker-credentials
      - skydive-wrappers

- job:
    name: skydive-build-copr
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: build-copr
          trigger-prefix: "deliverable "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/build-copr.sh
    wrappers:
      - copr-credentials
      - skydive-wrappers

- job:
    name: skydive-devstack-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: devstack-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-devstack-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-kolla-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: kolla-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-kolla-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-vagrant-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
      - string:
          name: DEVMODE
          default: "true"
          description: Use built binary, package and docker image
      - string:
          name: MODES
          default: "binary package container"
    triggers:
      - skydive-pull-request:
          name: vagrant-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: VAGRANT_DEFAULT_PROVIDER=libvirt scripts/ci/run-vagrant-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-selinux-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
      - string:
          name: DEVMODE
          default: "true"
          description: Use built binary, package and docker image
    triggers:
      - skydive-pull-request:
          name: selinux-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-cleanup
      - skydive-test:
          test: VAGRANT_DEFAULT_PROVIDER=libvirt scripts/ci/run-selinux-tests.sh
    wrappers:
      - skydive-wrappers

- job:
    name: skydive-packaging-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: packaging-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-packaging-tests.sh

- job:
    name: skydive-python-tests
    defaults: skydive
    triggers:
      - skydive-pull-request:
          name: python-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-python-tests.sh

- job:
    name: skydive-coverage
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: baremetal
    triggers:
      - skydive-pull-request:
          name: coverage
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-coverage.sh
    wrappers:
      - coverage-credentials
      - skydive-wrappers
    publishers:
      - publish-cobertura
      - skydive-publishers

- trigger:
    name: skydive-github-trigger
    triggers:
      - github

- job:
    name: skydive-tripleo-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: tripleo
    triggers:
      - skydive-pull-request:
          name: tripleo-tests
          trigger-prefix: "all "
          only-trigger-phrase: true
          cancel-builds-on-update: false
    builders:
      - skydive-test:
          test: scripts/ci/run-tripleo-tests.sh

- job:
    name: skydive-ppc64le-tests
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: ppc64le
    triggers:
      - skydive-pull-request:
          name: ppc64le-tests
          trigger-prefix: "ppc64le "
          only-trigger-phrase: true
          cancel-builds-on-update: true
    builders:
      - skydive-test:
          test: scripts/ci/run-unit-tests.sh
      - skydive-cleanup
      - skydive-test:
          test: scripts/ci/run-scale.sh
      - skydive-cleanup
      - skydive-test:
          test: BACKEND=elasticsearch scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

- job:
    name: skydive-functional-hw-tests
    disabled: true
    defaults: skydive
    parameters:
      - skydive-default-parameters
      - skydive-labels:
          slave-name: sriov
    triggers:
      - skydive-pull-request:
          name: functional-hw-tests
          trigger-prefix: "(all )?"
          only-trigger-phrase: false
          cancel-builds-on-update: true
    builders:
      - skydive-cleanup
      - skydive-test:
          test: |
            export BACKEND=elasticsearch WITH_VPP=true TEST_PATTERN='(SRIOV|VPP|Libvirt)' TAGS="$TAGS libvirt_tests sriov_tests"
            scripts/ci/run-hw-functional-tests.sh || scripts/ci/run-functional-tests.sh
    publishers:
      - junit:
          results: tests.xml
      - skydive-publishers

